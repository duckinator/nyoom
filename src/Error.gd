# Generated by generate_error.sh

extends Node

func print_info(err):
	printerr(info(err))
	print_stack()

func name(err):
	var error_names = {}
	error_names[FAILED] = "FAILED"
	error_names[ERR_UNAVAILABLE] = "ERR_UNAVAILABLE"
	error_names[ERR_UNCONFIGURED] = "ERR_UNCONFIGURED"
	error_names[ERR_UNAUTHORIZED] = "ERR_UNAUTHORIZED"
	error_names[ERR_PARAMETER_RANGE_ERROR] = "ERR_PARAMETER_RANGE_ERROR"
	error_names[ERR_OUT_OF_MEMORY] = "ERR_OUT_OF_MEMORY"
	error_names[ERR_FILE_NOT_FOUND] = "ERR_FILE_NOT_FOUND"
	error_names[ERR_FILE_BAD_DRIVE] = "ERR_FILE_BAD_DRIVE"
	error_names[ERR_FILE_BAD_PATH] = "ERR_FILE_BAD_PATH"
	error_names[ERR_FILE_NO_PERMISSION] = "ERR_FILE_NO_PERMISSION"
	error_names[ERR_FILE_ALREADY_IN_USE] = "ERR_FILE_ALREADY_IN_USE"
	error_names[ERR_FILE_CANT_OPEN] = "ERR_FILE_CANT_OPEN"
	error_names[ERR_FILE_CANT_WRITE] = "ERR_FILE_CANT_WRITE"
	error_names[ERR_FILE_CANT_READ] = "ERR_FILE_CANT_READ"
	error_names[ERR_FILE_UNRECOGNIZED] = "ERR_FILE_UNRECOGNIZED"
	error_names[ERR_FILE_CORRUPT] = "ERR_FILE_CORRUPT"
	error_names[ERR_FILE_MISSING_DEPENDENCIES] = "ERR_FILE_MISSING_DEPENDENCIES"
	error_names[ERR_FILE_EOF] = "ERR_FILE_EOF"
	error_names[ERR_CANT_OPEN] = "ERR_CANT_OPEN"
	error_names[ERR_CANT_CREATE] = "ERR_CANT_CREATE"
	error_names[ERR_QUERY_FAILED] = "ERR_QUERY_FAILED"
	error_names[ERR_ALREADY_IN_USE] = "ERR_ALREADY_IN_USE"
	error_names[ERR_LOCKED] = "ERR_LOCKED"
	error_names[ERR_TIMEOUT] = "ERR_TIMEOUT"
	#error_names[ERR_CANT_CONNECT] = "ERR_CANT_CONNECT"
	#error_names[ERR_CANT_RESOLVE] = "ERR_CANT_RESOLVE"
	#error_names[ERR_CONNECTION_ERROR] = "ERR_CONNECTION_ERROR"
	error_names[ERR_CANT_ACQUIRE_RESOURCE] = "ERR_CANT_ACQUIRE_RESOURCE"
	#error_names[ERR_CANT_FORK] = "ERR_CANT_FORK"
	error_names[ERR_INVALID_DATA] = "ERR_INVALID_DATA"
	error_names[ERR_INVALID_PARAMETER] = "ERR_INVALID_PARAMETER"
	error_names[ERR_ALREADY_EXISTS] = "ERR_ALREADY_EXISTS"
	error_names[ERR_DOES_NOT_EXIST] = "ERR_DOES_NOT_EXIST"
	error_names[ERR_DATABASE_CANT_READ] = "ERR_DATABASE_CANT_READ"
	error_names[ERR_DATABASE_CANT_WRITE] = "ERR_DATABASE_CANT_WRITE"
	error_names[ERR_COMPILATION_FAILED] = "ERR_COMPILATION_FAILED"
	error_names[ERR_METHOD_NOT_FOUND] = "ERR_METHOD_NOT_FOUND"
	error_names[ERR_LINK_FAILED] = "ERR_LINK_FAILED"
	error_names[ERR_SCRIPT_FAILED] = "ERR_SCRIPT_FAILED"
	error_names[ERR_CYCLIC_LINK] = "ERR_CYCLIC_LINK"
	#error_names[ERR_INVALID_DECLARATION] = "ERR_INVALID_DECLARATION"
	#error_names[ERR_DUPLICATE_SYMBOL] = "ERR_DUPLICATE_SYMBOL"
	error_names[ERR_PARSE_ERROR] = "ERR_PARSE_ERROR"
	error_names[ERR_BUSY] = "ERR_BUSY"
	#error_names[ERR_SKIP] = "ERR_SKIP"
	error_names[ERR_HELP] = "ERR_HELP"
	error_names[ERR_BUG] = "ERR_BUG"
	#error_names[ERR_PRINTER_ON_FIRE] = "ERR_PRINTER_ON_FIRE"
	return error_names[err]

func message(err):
	var error_messages = {}
	error_messages[FAILED] = "Generic error."
	error_messages[ERR_UNAVAILABLE] = "Unavailable error."
	error_messages[ERR_UNCONFIGURED] = "Unconfigured error."
	error_messages[ERR_UNAUTHORIZED] = "Unauthorized error."
	error_messages[ERR_PARAMETER_RANGE_ERROR] = "Parameter range error."
	error_messages[ERR_OUT_OF_MEMORY] = "Out of memory (OOM) error."
	error_messages[ERR_FILE_NOT_FOUND] = "File: Not found error."
	error_messages[ERR_FILE_BAD_DRIVE] = "File: Bad drive error."
	error_messages[ERR_FILE_BAD_PATH] = "File: Bad path error."
	error_messages[ERR_FILE_NO_PERMISSION] = "File: No permission error."
	error_messages[ERR_FILE_ALREADY_IN_USE] = "File: Already in use error."
	error_messages[ERR_FILE_CANT_OPEN] = "File: Can’t open error."
	error_messages[ERR_FILE_CANT_WRITE] = "File: Can’t write error."
	error_messages[ERR_FILE_CANT_READ] = "File: Can’t read error."
	error_messages[ERR_FILE_UNRECOGNIZED] = "File: Unrecognized error."
	error_messages[ERR_FILE_CORRUPT] = "File: Corrupt error."
	error_messages[ERR_FILE_MISSING_DEPENDENCIES] = "File: Missing dependencies error."
	error_messages[ERR_FILE_EOF] = "File: End of file (EOF) error."
	error_messages[ERR_CANT_OPEN] = "Can’t open error."
	error_messages[ERR_CANT_CREATE] = "Can’t create error."
	error_messages[ERR_QUERY_FAILED] = "Query failed error."
	error_messages[ERR_ALREADY_IN_USE] = "Already in use error."
	error_messages[ERR_LOCKED] = "Locked error."
	error_messages[ERR_TIMEOUT] = "Timeout error."
	#error_messages[ERR_CANT_CONNECT] = "Can’t connect error."
	#error_messages[ERR_CANT_RESOLVE] = "Can’t resolve error."
	#error_messages[ERR_CONNECTION_ERROR] = "Connection error."
	error_messages[ERR_CANT_ACQUIRE_RESOURCE] = "Can’t acquire resource error."
	#error_messages[ERR_CANT_FORK] = "Can’t fork process error."
	error_messages[ERR_INVALID_DATA] = "Invalid data error."
	error_messages[ERR_INVALID_PARAMETER] = "Invalid parameter error."
	error_messages[ERR_ALREADY_EXISTS] = "Already exists error."
	error_messages[ERR_DOES_NOT_EXIST] = "Does not exist error."
	error_messages[ERR_DATABASE_CANT_READ] = "Database: Read error."
	error_messages[ERR_DATABASE_CANT_WRITE] = "Database: Write error."
	error_messages[ERR_COMPILATION_FAILED] = "Compilation failed error."
	error_messages[ERR_METHOD_NOT_FOUND] = "Method not found error."
	error_messages[ERR_LINK_FAILED] = "Linking failed error."
	error_messages[ERR_SCRIPT_FAILED] = "Script failed error."
	error_messages[ERR_CYCLIC_LINK] = "Cycling link (import cycle) error."
	#error_messages[ERR_INVALID_DECLARATION] = "Invalid declaration error."
	#error_messages[ERR_DUPLICATE_SYMBOL] = "Duplicate symbol error."
	error_messages[ERR_PARSE_ERROR] = "Parse error."
	error_messages[ERR_BUSY] = "Busy error."
	#error_messages[ERR_SKIP] = "Skip error."
	error_messages[ERR_HELP] = "Help error."
	error_messages[ERR_BUG] = "Bug error."
	#error_messages[ERR_PRINTER_ON_FIRE] = "Printer on fire error. (This is an easter egg, no engine methods return this error code.)"
	return error_messages[err]

func info(err):
	return message(err) + ' (' + name(err) + ')'
